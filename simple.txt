_function1
    input parameter list [int c2, int d2cd]
    output parameter list [int b5d, int d3]; 
<<<<<<< HEAD
        b5d<---c2+234-d2cd;
        d3<---b5d+20;
=======
        b5d<---c2+ 234 - d2cd;
        

        if(b5d < 20)
        then
            b5d <---2;
        endif

>>>>>>> 733d95b5dd46a6e66ef7b1a33a34c1fadeb9fb7e
    return [b5d, d3]; 
end

_function2
    input parameter list [int c2, int d2cd]
    output parameter list [int b5d, int d3];
		[b5d, d3] <--- call _function1 with parameters [c2, d2cd];
<<<<<<< HEAD
        %if (6 > 7 || 7.7 < 8)
        %then
        %    write(b5d);
        %endif
        b5d<---c2+234-d2cd;
        d3<---b5d+20;
    return [b5d, d3]; 
 end


_main
    record #marks
		type real : maths; 
		type real: physics; 
		type real: chemistry;
	endrecord
=======
        if ((6 > 7) @@@ (7.77 < 8.54))
        then
            write(b5d);
        endif
        b5d<---c2+234-d2cd;
        d3<---b5d+20;
    return [b5d, d3]; 
end


_main
    

    %record #marks
	%	type real : maths; 
	%	type real: physics; 
	%	type real: chemistry;
	%endrecord
>>>>>>> 733d95b5dd46a6e66ef7b1a33a34c1fadeb9fb7e

    %type record #marks : d2;
    type real : b5;
	type real: c5;
	type real: d5;
<<<<<<< HEAD
	type int: c2;


    %while ((b5 == c5) &&& (d5 < c2))
    %    if (b5 > d5)
    %    then
    %        read(b5);
    %    endif
    %endwhile

    b5 <--- c2;
=======
	type real: c2;
    %type real: c2;
    %type int: a5;
    % b5 <---  + 1;


    while ((b5 == c5) &&& (d5 < c2))
        if (b5 > d5)
        then
            read(b5);
        endif
    endwhile
    c2 <--- 2;
    d5 <--- 1.54;
    b5 <--- c2 + d5;
>>>>>>> 733d95b5dd46a6e66ef7b1a33a34c1fadeb9fb7e
    return;
end
